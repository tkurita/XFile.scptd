{\rtf1\ansi\ansicpg932\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Verdana;\f1\fnil\fcharset128 HiraKakuProN-W3;}
{\colortbl;\red255\green255\blue255;\red76\green78\blue78;\red0\green0\blue0;\red108\green5\blue211;
\red0\green0\blue255;\red64\green128\blue0;\red0\green22\blue176;\red74\green30\blue127;\red68\green21\blue176;
}
\deftab480
\pard\pardeftab480\ql\qnatural\pardirnatural

\f0\fs24 \cf2 (* Copyright (C) 2007, 2008, 2009, 2010.2011 Tetsuro KURITA\
\
This program is free software: you can redistribute it and/or modify\
it under the terms of the GNU General Public License as published by\
the Free Software Foundation, either version 3 of the License, or\
(at your option) any later version.\
\
Foobar is distributed in the hope that it will be useful,\
but WITHOUT ANY WARRANTY; without even the implied warranty of\
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\
GNU General Public License for more details.\
\
You should have received a copy of the GNU General Public License\
along with Foobar.  If not, see <http://www.gnu.org/licenses/> *)\cf3 \
\

\b property
\b0  \cf4 name\cf3  : "XFile"\

\b property
\b0  
\i \cf5 version
\i0 \cf3  : "1.3.4b"\
\

\b property
\b0  \cf6 PathInfo\cf3  : 
\b \cf7 module
\b0 \cf3 \
\
\
\cf2 (*!@title XFile Reference\
\
* Version : 1.3.4b\
* Author : Tetsuro KURITA ((<tkurita@mac.com>))\
\
@references\
PathInfo || help:openbook='PathInfo Help'\
*)\cf3 \
\

\b property
\b0  \cf6 _prefer_posix\cf3  : \cf8 true\cf3 \
\

\b on
\b0  \cf6 prefer_posix\cf3 (\cf6 bool\cf3 )\
	
\b set
\b0  
\b my
\b0  \cf6 _prefer_posix\cf3  
\b to
\b0  \cf6 bool\cf3 \

\b end
\b0  \cf6 prefer_posix\cf3 \
\
\cf2 (*!@group Constractors\
<!-- begin locale ja -->\

\f1 \'83\'4e\'83\'89\'83\'58\'83\'49\'83\'75\'83\'57\'83\'46\'83\'4e\'83\'67\'82\'a9\'82\'e7\'8e\'77\'92\'e8\'82\'b5\'82\'bd\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'f0\'8e\'51\'8f\'c6\'82\'b5\'82\'bd
\f0  XFile 
\f1 \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'f0\'8d\'ec\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Making a new instance with a reference to a file from a class object.\
<!-- end locale -->\
*)\cf3 \
\
\cf2 (*!@abstruct \
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'8e\'51\'8f\'c6\'82\'a9\'82\'e7
\f0  XFile 
\f1 \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'f0\'8d\'ec\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Make a XFile instance with a file reference\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'82\'d6\'82\'cc\'8e\'51\'8f\'c6\'82\'c6\'82\'b5\'82\'c4\'81\'41
\f0 HFS/POSIX 
\f1 \'8c\'60\'8e\'ae\'82\'cc\'83\'70\'83\'58\'95\'b6\'8e\'9a\'97\'f1\'82\'e0\'82\'b5\'82\'ad\'82\'cd
\f0 alias, File URL
\f1 \'82\'f0\'8e\'f3\'82\'af\'95\'74\'82\'af\'82\'dc\'82\'b7\'81\'42
\f0 \
\
<!-- begin locale en -->\
HFS/POSIX path, alias and file URL can be accepted as file specification.\
\
<!-- end locale -->\
@param file_ref (alias or Unicode text) : \
<!-- begin locale ja -->HFS/POSIX 
\f1 \'8c\'60\'8e\'ae\'82\'cc\'83\'70\'83\'58\'95\'b6\'8e\'9a\'97\'f1\'82\'e0\'82\'b5\'82\'ad\'82\'cd
\f0 alias
\f1 \'81\'41
\f0 File URL\
<!-- begin locale en -->a HFS/POSIX path, alias or File URL\
<!-- end locale -->\
@result script object : a new instance of XFile\
*)\cf3 \

\b on
\b0  \cf6 make_with\cf3 (\cf6 file_ref\cf3 )\
	
\b set
\b0  \cf6 is_hfs\cf3  
\b to
\b0  \cf8 false\cf3 \
	
\b if
\b0  
\i \cf5 class
\i0 \cf3  
\b of
\b0  \cf6 file_ref\cf3  
\b is
\b0  
\b in
\b0  \{
\i \cf5 text
\i0 \cf3 , 
\i \cf5 Unicode text
\i0 \cf3 , 
\i \cf5 string
\i0 \cf3 \} 
\b then
\b0 \
		
\b set
\b0  \cf6 is_hfs\cf3  
\b to
\b0  (\cf6 file_ref\cf3  
\b does not
\b0  
\b start with
\b0  "/")\
	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf6 is_hfs\cf3  
\b then
\b0 \
		
\b set
\b0  \cf6 path_info\cf3  
\b to
\b0  \cf6 PathInfo\cf3 's \cf6 make_with_hfs\cf3 (\cf6 file_ref\cf3 )\
	
\b else
\b0  
\b if
\b0  
\b my
\b0  \cf6 _prefer_posix\cf3  
\b then
\b0 \
		
\b set
\b0  \cf6 path_info\cf3  
\b to
\b0  \cf6 PathInfo\cf3 's \cf6 make_with_posix\cf3 (\cf6 file_ref\cf3 )\
	
\b else
\b0 \
		
\b set
\b0  \cf6 path_info\cf3  
\b to
\b0  \cf6 PathInfo\cf3 's \cf6 make_with_hfs\cf3 (\cf6 file_ref\cf3 )\
	
\b end
\b0  
\b if
\b0 \
	\
	
\b return
\b0  \cf6 make_with_pathinfo\cf3 (\cf6 path_info\cf3 )\

\b end
\b0  \cf6 make_with\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\
((<PathInfo>)) 
\f1 \'82\'cc\'95\'d4\'82\'e8\'92\'6c\'82\'a9\'82\'e7
\f0  XFile 
\f1 \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'f0\'90\'b6\'90\'ac\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Make a new instance with a record returned by ((<PathInfo>))\
<!-- end locale -->\
@param path_record (record) :\
<!-- begin locale ja -->PathInfo 
\f1 \'82\'cc\'95\'d4\'82\'e8\'92\'6c
\f0 \
<!-- begin locale en -->a result of PathInfo\
<!-- end locale -->\
@result script object : a new instance of XFile\
 *)\cf3 \

\b on
\b0  \cf6 make_with_pathinfo\cf3 (\cf6 path_info\cf3 )\
	
\b set
\b0  \cf6 a_parent\cf3  
\b to
\b0  
\b me
\b0 \
	
\b script
\b0  \cf6 XFile\cf3 \
		
\b property
\b0  \cf4 parent\cf3  : \cf6 a_parent\cf3 \
		
\b property
\b0  \cf6 _pathInfo\cf3  : \cf6 path_info\cf3 \
		
\b property
\b0  \cf6 _infoRecord\cf3  : 
\i \cf5 missing value
\i0 \cf3 \
		
\b property
\b0  \cf6 _prefer_posix\cf3  : \cf6 path_info\cf3 's \cf6 is_posix\cf3 ()\
	
\b end
\b0  
\b script
\b0 \
	
\b return
\b0  \cf6 XFile\cf3 \

\b end
\b0  \cf6 make_with_pathinfo\cf3 \
\
\
\
\cf2 (*!@group Make a New Instance with Changing Contents of an Instance\
<!-- begin locale ja -->\

\f1 \'8a\'f9\'91\'b6\'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'cc\'88\'ea\'95\'94\'82\'cc\'93\'e0\'97\'65\'82\'f0\'95\'cf\'8d\'58\'82\'b5\'82\'c4\'81\'41\'90\'56\'82\'b5\'82\'a2\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'f0\'90\'b6\'90\'ac\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Making a new XFile instance with changing a part of the exisiting instance.\
<!-- end locale -->\
*)\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'8e\'51\'8f\'c6\'82\'b7\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'83\'74\'83\'40\'83\'43\'83\'8b\'96\'bc\'82\'f0\'95\'cf\'8d\'58\'82\'b5\'82\'bd
\f0  XFile 
\f1 \'82\'f0\'82\'c2\'82\'ad\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Make a new instance with changing file name of the instance\
<!-- end locale -->\
@param a_name (Unicode text or string) : \
<!-- begin locale ja -->
\f1 \'8e\'51\'8f\'c6\'82\'b5\'82\'bd\'82\'a2\'83\'74\'83\'40\'83\'43\'83\'8b\'96\'bc
\f0 \
<!-- begin locale en -->a file name\
<!-- end locale -->\
@result script object : a new instance of XFile\
*)\cf3 \

\b on
\b0  \cf6 change_name\cf3 (\cf6 a_name\cf3 )\
	
\b set
\b0  \cf6 path_info\cf3  
\b to
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 change_name\cf3 (\cf6 a_name\cf3 )\
	
\b return
\b0  \cf6 make_with_pathinfo\cf3 (\cf6 path_info\cf3 )\

\b end
\b0  \cf6 change_name\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'8e\'51\'8f\'c6\'82\'b7\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'95\'cf\'8d\'58\'82\'b5\'82\'bd
\f0  XFile 
\f1 \'82\'f0\'82\'c2\'82\'ad\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Make a new instance with changing folder of the instance\
<!-- end locale -->\
@param a_name (alias, Unicode text, file URL, file specification) :\
<!-- begin locale ja -->
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'d6\'82\'cc\'8e\'51\'8f\'c6
\f0 \
<!-- begin locale en -->a reference to folder\
<!-- end locale -->\
@result script object : a new instance of XFile\
*)\cf3 \

\b on
\b0  \cf6 change_folder\cf3 (\cf6 folder_ref\cf3 )\
	
\b set
\b0  \cf6 path_info\cf3  
\b to
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 change_folder\cf3 (\cf6 folder_ref\cf3 )\
	
\b return
\b0  \cf6 make_with_pathinfo\cf3 (\cf6 path_info\cf3 )\

\b end
\b0  \cf6 change_folder\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'8e\'51\'8f\'c6\'82\'b7\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'8a\'67\'92\'a3\'8e\'71\'82\'f0\'95\'cf\'8d\'58\'82\'b5\'82\'bd
\f0  XFile 
\f1 \'82\'f0\'82\'c2\'82\'ad\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Make a new instance with changing path extension of the instance\
<!-- end locale -->\
@param a_name (Unicode text or string) :\
<!-- begin locale ja -->
\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'8a\'67\'92\'a3\'8e\'71\'81\'42\'83\'68\'83\'62\'83\'68
\f0  "." 
\f1 \'82\'c5\'8e\'6e\'82\'dc\'82\'c1\'82\'c4\'82\'a2\'82\'e9\'95\'4b\'97\'76\'82\'aa\'82\'a0\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->path extension, should be starts with a dot ".".\
<!-- end locale -->\
@result script object : a new instance of XFile\
*)\cf3 \

\b on
\b0  \cf6 change_path_extension\cf3 (\cf6 a_suffix\cf3 )\
	
\b return
\b0  \cf6 make_with_pathinfo\cf3 (
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 change_path_extension\cf3 (\cf6 a_suffix\cf3 ))\

\b end
\b0  \cf6 change_path_extension\cf3 \
\
\cf2 (*!@group Getting a File Reference form an Instance\
<!-- begin locale ja -->\
XFile 
\f1 \'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'aa\'8e\'51\'8f\'c6\'82\'b5\'82\'c4\'82\'a2\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'d6\'82\'cc\'8e\'51\'8f\'c6\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain a reference to a file which XFile reference to.\
<!-- end locale -->\
*)\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'47\'83\'43\'83\'8a\'83\'41\'83\'58\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain a reference to a file as alias class\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\

\f1 \'91\'b6\'8d\'dd\'82\'b5\'82\'c8\'82\'a2\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'e0\'82\'b5\'82\'ad\'82\'cd\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'c9\'91\'ce\'82\'b5\'82\'c4\'8e\'c0\'8d\'73\'82\'b7\'82\'e9\'82\'c6\'83\'47\'83\'89\'81\'5b\'82\'aa\'94\'ad\'90\'b6\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
An error raise, If a file or a folder does not exists.\
<!-- end locale -->\
@result alias\
*)\cf3 \

\b on
\b0  \cf6 as_alias\cf3 ()\
	\cf6 check_existance_raising_error\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 as_alias\cf3 ()\

\b end
\b0  \cf6 as_alias\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\
File URL 
\f1 \'83\'4e\'83\'89\'83\'58\'82\'cc\'83\'74\'83\'40\'83\'43\'83\'8b\'8e\'51\'8f\'c6\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain a reference to a file as File URL class\
<!-- end locale -->\
<!-- end locale -->\
@result File URL\
*)\cf3 \

\b on
\b0  \cf6 as_furl\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 as_furl\cf3 ()\

\b end
\b0  \cf6 as_furl\cf3 \
\
\cf2 (*!@abstruct \
<!-- begin locale ja -->\
HFS 
\f1 \'8c\'60\'8e\'ae\'82\'cc\'83\'70\'83\'58\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain HFS path\
<!-- end locale -->\
@result Unicode text\
*)\cf3 \

\b on
\b0  \cf6 hfs_path\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 hfs_path\cf3 ()\

\b end
\b0  \cf6 hfs_path\cf3 \
\
\cf2 (*!@abstruct \
<!-- begin locale ja -->\
POSIX
\f1 \'8c\'60\'8e\'ae\'82\'cc\'83\'70\'83\'58\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain POSIX path\
<!-- end locale -->\
@result Unicode text\
*)\cf3 \

\b on
\b0  \cf6 posix_path\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 posix_path\cf3 ()\

\b end
\b0  \cf6 posix_path\cf3 \
\

\b on
\b0  \cf6 normalized_posix_path\cf3 ()\
	
\b set
\b0  \cf6 a_path\cf3  
\b to
\b0  \cf6 posix_path\cf3 ()\
	
\b if
\b0  \cf6 a_path\cf3  
\b ends with
\b0  "/" 
\b then
\b0 \
		
\b set
\b0  \cf6 a_path\cf3  
\b to
\b0  
\i \cf5 text
\i0 \cf3  1 
\b thru
\b0  -2 
\b of
\b0  \cf6 a_path\cf3 \
	
\b end
\b0  
\b if
\b0 \
	
\b return
\b0  \cf6 a_path\cf3 \

\b end
\b0  \cf6 normalized_posix_path\cf3 \
\
\cf2 (*!@group Working with Attributes *)\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'c5\'82\'a0\'82\'e9\'82\'a9\'82\'c7\'82\'a4\'82\'a9\'92\'b2\'82\'d7\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Check whether the item is a folder or not.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
boolean : 
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'c5\'82\'a0\'82\'ea\'82\'ce
\f0  true \
<!-- begin locale en -->\
boolean : true if the the item is folder.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 is_folder\cf3 ()\
	\cf2 (*\
	if item_ref()'s class is not alias then\
		check_existance_raising_error()\
		update_pathinfo()\
	end if\
	return my _pathInfo's is_folder()\
	*)\cf3 \
	
\b set
\b0  \cf6 info_rec\cf3  
\b to
\b0  \cf6 info\cf3 ()\
	
\b return
\b0  \cf9 folder\cf3  
\b of
\b0  \cf6 info_rec\cf3 \

\b end
\b0  \cf6 is_folder\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'70\'83\'62\'83\'50\'81\'5b\'83\'57\'82\'c5\'82\'a0\'82\'e9\'82\'a9\'82\'c7\'82\'a4\'82\'a9\'92\'b2\'82\'d7\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Check whether the item is a package or not.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
boolean : 
\f1 \'83\'70\'83\'62\'83\'50\'81\'5b\'83\'57\'82\'c5\'82\'a0\'82\'ea\'82\'ce
\f0  true\
<!-- begin locale en -->\
boolean : true if the item is a package.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 is_package\cf3 ()\
	
\b set
\b0  \cf6 info_rec\cf3  
\b to
\b0  \cf6 info\cf3 ()\
	
\b return
\b0  \cf9 package folder\cf3  
\b of
\b0  \cf6 info_rec\cf3 \

\b end
\b0  \cf6 is_package\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'47\'83\'43\'83\'8a\'83\'41\'83\'58\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'c5\'82\'a0\'82\'e9\'82\'a9\'82\'c7\'82\'a4\'82\'a9\'92\'b2\'82\'d7\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Check whether the item is an alias file or not.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
boolean : 
\f1 \'83\'47\'83\'43\'83\'8a\'83\'41\'83\'58\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'c5\'82\'a0\'82\'ea\'82\'ce
\f0  true\
<!-- begin locale en -->\
boolean : true if the item is an alias file.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 is_alias\cf3 ()\
	
\b set
\b0  \cf6 info_rec\cf3  
\b to
\b0  \cf6 info\cf3 ()\
	
\b return
\b0  
\i \cf5 alias
\i0 \cf3  
\b of
\b0  \cf6 info_rec\cf3 \

\b end
\b0  \cf6 is_alias\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'89\'c2\'8e\'8b\'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'82\'c5\'82\'a0\'82\'e9\'82\'a9\'82\'c7\'82\'a4\'82\'a9
\f0 \
<!-- begin locale en -->\
Check whether the item is visible or not.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
boolean : 
\f1 \'89\'c2\'8e\'8b\'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'c5\'82\'a0\'82\'ea\'82\'ce
\f0  true\
<!-- begin locale en -->\
boolean : true if the item is visible.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 is_visible\cf3 ()\
	
\b set
\b0  \cf6 info_rec\cf3  
\b to
\b0  \cf6 info\cf3 ()\
	
\b return
\b0  \cf4 visible\cf3  
\b of
\b0  \cf6 info_rec\cf3 \

\b end
\b0  \cf6 is_visible\cf3 \
\

\b on
\b0  \cf6 type_identifier\cf3 ()\
	
\b set
\b0  \cf6 info_rec\cf3  
\b to
\b0  \cf6 info\cf3 ()\
	
\b return
\b0  \cf9 type identifier\cf3  
\b of
\b0  \cf6 info_rec\cf3 \

\b end
\b0  \cf6 type_identifier\cf3 \
\
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'4e\'83\'8a\'83\'47\'81\'5b\'83\'5e\'83\'52\'81\'5b\'83\'68\'82\'c6\'83\'5e\'83\'43\'83\'76\'83\'52\'81\'5b\'83\'68\'82\'f0\'90\'dd\'92\'e8\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
set creator code and type code to the item.\
<!-- end locale -->\
@param creator_code (Unicode text or string) : \
<!-- begin locale ja -->
\f1 \'83\'4e\'83\'8a\'83\'47\'81\'5b\'83\'5e\'83\'52\'81\'5b\'83\'68
\f0 \
<!-- begin locale en -->creator code which consists of 4 characters\
<!-- end locale -->\
@param type_code (Unicode text or string) : \
<!-- begin locale ja -->
\f1 \'83\'5e\'83\'43\'83\'76\'83\'52\'81\'5b\'83\'68
\f0 \
<!-- begin locale en -->type code which consists of 4 characters\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 set_types\cf3 (\cf6 creator_code\cf3 , \cf6 type_code\cf3 )\
	
\b if
\b0  
\b not
\b0  \cf6 is_folder\cf3 () 
\b then
\b0 \
		
\b set
\b0  \cf6 a_file\cf3  
\b to
\b0  \cf6 as_alias\cf3 ()\
		
\b tell
\b0  
\i \cf5 application
\i0 \cf3  "Finder"\
			
\b set
\b0  \cf4 creator type\cf3  
\b of
\b0  \cf6 a_file\cf3  
\b to
\b0  \cf6 creator_code\cf3 \
			
\b set
\b0  \cf4 file type\cf3  
\b of
\b0  \cf6 a_file\cf3  
\b to
\b0  \cf6 type_code\cf3 \
		
\b end
\b0  
\b tell
\b0 \
		
\b set
\b0  
\b my
\b0  \cf6 _infoRecord\cf3  
\b to
\b0  
\i \cf5 missing value
\i0 \cf3 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf6 set_types\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'8f\'ee\'95\'f1\'82\'f0\'82\'dc\'82\'c6\'82\'df\'82\'c4\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain file information.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\
info for 
\f1 \'83\'52\'83\'7d\'83\'93\'83\'68\'82\'f0\'8e\'67\'97\'70\'82\'b5\'82\'c4\'8f\'ee\'95\'f1\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42\'88\'ea\'93\'78
\f0  info() 
\f1 \'82\'f0\'8e\'c0\'8d\'73\'82\'b7\'82\'e9\'82\'c6\'82\'bb\'82\'cc\'8c\'8b\'89\'ca\'82\'cd\'93\'e0\'95\'94\'82\'c9\'83\'4c\'83\'83\'83\'62\'83\'56\'83\'85\'82\'b3\'82\'ea\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Do "info for" command for the item. The result is cached and same value is returned at next calling info().\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
record : info for 
\f1 \'83\'52\'83\'7d\'83\'93\'83\'68\'82\'cc\'8e\'c0\'8d\'73\'8c\'8b\'89\'ca
\f0 \
<!-- begin locale en -->\
record : result of info for command\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 info\cf3 ()\
	
\b if
\b0  
\b my
\b0  \cf6 _infoRecord\cf3  
\b is
\b0  
\i \cf5 missing value
\i0 \cf3  
\b then
\b0 \
		\cf6 check_existance_raising_error\cf3 ()\
		
\b set
\b0  
\b my
\b0  \cf6 _infoRecord\cf3  
\b to
\b0  
\b \cf7 info for
\b0 \cf3  \cf6 as_furl\cf3 ()\
	
\b end
\b0  
\b if
\b0 \
	
\b return
\b0  
\b my
\b0  \cf6 _infoRecord\cf3 \

\b end
\b0  \cf6 info\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'8f\'ee\'95\'f1\'82\'f0\'83\'66\'83\'42\'83\'58\'83\'4e\'83\'56\'83\'58\'83\'65\'83\'80\'82\'a9\'82\'e7\'8d\'c4\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain file information\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\
info for 
\f1 \'83\'52\'83\'7d\'83\'93\'83\'68\'82\'f0\'8e\'67\'97\'70\'82\'b5\'82\'c4\'8f\'ee\'95\'f1\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 ((<info>))() 
\f1 \'82\'f0\'8e\'c0\'8d\'73\'82\'b7\'82\'e9\'82\'c6\'82\'bb\'82\'cc\'8c\'8b\'89\'ca\'82\'cd\'93\'e0\'95\'94\'82\'c9\'83\'4c\'83\'83\'83\'62\'83\'56\'83\'85\'82\'b3\'82\'ea\'82\'dc\'82\'b7\'82\'aa\'81\'41
\f0 re_info()
\f1 \'82\'cd
\f0  info for 
\f1 \'83\'52\'83\'7d\'83\'93\'83\'68\'82\'f0\'8e\'c0\'8d\'73\'82\'b5\'82\'c4\'81\'41\'83\'4c\'83\'83\'83\'62\'83\'56\'83\'85\'82\'f0\'8d\'58\'90\'56\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Do "info for" command for the item and reset the cache of ((<info>))().\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
record : info for 
\f1 \'83\'52\'83\'7d\'83\'93\'83\'68\'82\'cc\'8e\'c0\'8d\'73\'8c\'8b\'89\'ca
\f0 \
<!-- begin locale en -->\
record : result of info for command\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 re_info\cf3 ()\
	
\b set
\b0  
\b my
\b0  \cf6 _infoRecord\cf3  
\b to
\b0  
\b \cf7 info for
\b0 \cf3  \cf6 as_furl\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _infoRecord\cf3 \

\b end
\b0  \cf6 re_info\cf3 \
\
\cf2 (*!@group Obtain Path Infomation *)\cf3 \
\
\cf2 (*!@abstruct \
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'96\'bc\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain the name of the item referenced by the instance \
<!-- end locale -->\
@result Unicode text\
*)\cf3 \

\b on
\b0  \cf6 item_name\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 item_name\cf3 ()\

\b end
\b0  \cf6 item_name\cf3 \
\
\cf2 (*!@abstruct \
<!-- begin locale ja -->\

\f1 \'83\'78\'81\'5b\'83\'58\'83\'6c\'81\'5b\'83\'80
\f0 (
\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'96\'bc\'82\'a9\'82\'e7\'8a\'67\'92\'a3\'8e\'71\'82\'f0\'82\'cc\'82\'bc\'82\'a2\'82\'bd\'82\'e0\'82\'cc
\f0 )
\f1 \'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain the base name (a name which does not include path extension) of the item referenced by the instance.\
<!-- end locale -->\
@result Unicode text\
*)\cf3 \

\b on
\b0  \cf6 basename\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 basename\cf3 ()\

\b end
\b0  \cf6 basename\cf3 \
\
\cf2 (*!@abstruct \
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'96\'bc\'82\'cc\'8a\'67\'92\'a3\'8e\'71\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain path extension
\f1 \'81\'40
\f0 of the item referenced by the instance.\
<!-- end locale -->\
@result Unicode text\
*)\cf3 \

\b on
\b0  \cf6 path_extension\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 path_extension\cf3 ()\

\b end
\b0  \cf6 path_extension\cf3 \
\
\

\b on
\b0  \cf6 update_cache\cf3 ()\
	
\b if
\b0  
\b my
\b0  \cf6 _infoRecord\cf3  
\b is
\b0  
\b not
\b0  
\i \cf5 missing value
\i0 \cf3  
\b then
\b0 \
		\cf6 check_existance_raising_error\cf3 ()\
		
\b set
\b0  
\b my
\b0  \cf6 _infoRecord\cf3  
\b to
\b0  
\b \cf7 info for
\b0 \cf3  \cf6 item_ref\cf3 ()\
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf6 update_cache\cf3 \
\
\cf2 (*!@group Working with a Bundle *)\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'6f\'83\'93\'83\'68\'83\'8b\'83\'8a\'83\'5c\'81\'5b\'83\'58\'82\'c9\'8a\'dc\'82\'dc\'82\'ea\'82\'c4\'82\'a2\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain an item which is in the bundle resource folder.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\

\f1 \'83\'6f\'83\'93\'83\'68\'83\'8b\'82\'f0\'8e\'51\'8f\'c6\'82\'b5\'82\'c4\'82\'a2\'82\'e9\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'c9\'82\'b5\'82\'a9\'8e\'c0\'8d\'73\'82\'c5\'82\'ab\'82\'dc\'82\'b9\'82\'f1\'81\'42
\f0 \
<!-- begin locale en -->\
This method can be call to a bundle.\
<!-- end locale -->\
@param resource_name (Unicode text) : \
<!-- begin locale ja -->
\f1 \'83\'8a\'83\'5c\'81\'5b\'83\'58\'96\'bc
\f0 \
<!-- begin locale en -->a resource name\
<!-- end locale -->\
@result script object : a XFile instance\
*)\cf3 \

\b on
\b0  \cf6 bundle_resource\cf3 (\cf6 resource_name\cf3 )\
	
\b return
\b0  \cf6 make_with\cf3 (
\b \cf7 path to resource
\b0 \cf3  \cf6 resource_name\cf3  \cf7 in bundle\cf3  (\cf6 as_alias\cf3 ()))\

\b end
\b0  \cf6 bundle_resource\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'6f\'83\'93\'83\'68\'83\'8b\'82\'cc
\f0 Info.plist
\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'8e\'51\'8f\'c6\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain a reference to Info.plist of the bundle.\
<!-- end locale -->\
@result script object : a XFile instance\
*)\cf3 \

\b on
\b0  \cf6 bundle_InfoPlist\cf3 ()\
	
\b return
\b0  \cf6 child_posix\cf3 ("Contents/Info.plist")\

\b end
\b0  \cf6 bundle_InfoPlist\cf3 \
\

\b on
\b0  \cf6 bundle_resources_folder\cf3 ()\
	
\b return
\b0  \cf6 child_posix\cf3 ("Contents/Resources/")\

\b end
\b0  \cf6 bundle_resources_folder\cf3 \
\
\cf2 (*!@group File Manipulations *)\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'8e\'51\'8f\'c6\'82\'b5\'82\'c4\'82\'a2\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'aa\'91\'b6\'8d\'dd\'82\'b7\'82\'e9\'82\'a9\'82\'c7\'82\'a4\'82\'a9\'92\'b2\'82\'d7\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Check whether the item referenced by the instance exists or not.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\

\f1 \'93\'e0\'95\'94\'82\'cc\'83\'74\'83\'40\'83\'43\'83\'8b\'8e\'51\'8f\'c6\'82\'f0\'83\'47\'83\'43\'83\'8a\'83\'41\'83\'58\'82\'c9\'95\'cf\'8a\'b7\'82\'b5\'82\'dc\'82\'b7\'81\'42\'82\'b7\'82\'c5\'82\'c9\'83\'47\'83\'43\'83\'8a\'83\'41\'83\'58\'8c\'60\'8e\'ae\'82\'cc\'8e\'51\'8f\'c6\'82\'f0\'95\'db\'8e\'9d\'82\'b5\'82\'c4\'82\'a2\'82\'e9\'8f\'ea\'8d\'87\'82\'c5\'82\'e0\'81\'41\'83\'47\'83\'43\'83\'8a\'83\'41\'83\'58\'82\'f0\'8d\'c4\'8d\'5c\'92\'7a\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
\

\f1 \'92\'ca\'8f\'ed\'81\'41\'83\'47\'83\'43\'83\'8a\'83\'41\'83\'58\'82\'cd\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'88\'da\'93\'ae\'81\'41\'83\'74\'83\'40\'83\'43\'83\'8b\'96\'bc\'82\'cc\'95\'cf\'8d\'58\'82\'f0\'92\'c7\'90\'d5\'82\'b7\'82\'e9\'82\'b1\'82\'c6\'82\'aa\'82\'c5\'82\'ab\'82\'dc\'82\'b7\'82\'aa\'81\'41\'95\'ca\'82\'cc\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'c5\'8f\'e3\'8f\'91\'82\'ab\'82\'b3\'82\'ea\'82\'e9\'82\'c6\'92\'c7\'90\'d5\'82\'c5\'82\'ab\'82\'c8\'82\'ad\'82\'c8\'82\'e8\'82\'dc\'82\'b7\'81\'42\'82\'bb\'82\'cc\'82\'e6\'82\'a4\'82\'c8\'82\'c6\'82\'ab\'81\'41
\f0 item_exits() 
\f1 \'82\'f0\'8e\'c0\'8d\'73\'82\'b5\'82\'c4\'83\'47\'83\'43\'83\'8a\'83\'41\'83\'58\'82\'f0\'8d\'c4\'8d\'5c\'92\'7a\'82\'b5\'82\'c4\'82\'ad\'82\'be\'82\'b3\'82\'a2\'81\'42
\f0 \
<!-- begin locale en -->\
A file reference stored in a instance is converted to alias class. Even if the class of the inner file reference already has been alias, the alias is reconstructed.\
<!-- end locale -->\
@result \
<!-- begin locale ja -->\
boolean : 
\f1 \'91\'b6\'8d\'dd\'82\'b7\'82\'e9\'82\'cc\'82\'c5\'82\'a0\'82\'ea\'82\'ce
\f0  true\
<!-- begin locale en -->\
boolean : true if the item exists.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 item_exists\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 item_exists\cf3 ()\

\b end
\b0  \cf6 item_exists\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'8e\'51\'8f\'c6\'82\'b5\'82\'c4\'82\'a2\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'aa\'91\'b6\'8d\'dd\'82\'b7\'82\'e9\'82\'a9\'82\'c7\'82\'a4\'82\'a9\'92\'b2\'82\'d7\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Check whether the item referenced by the instance exists or not.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\
((<item_exits>)) 
\f1 \'82\'c6\'82\'cd\'88\'e1\'82\'c1\'82\'c4\'81\'41\'93\'e0\'95\'94\'82\'cc\'83\'74\'83\'40\'83\'43\'83\'8b\'8e\'51\'8f\'c6\'82\'cd\'8d\'58\'90\'56\'82\'b3\'82\'ea\'82\'dc\'82\'b9\'82\'f1\'81\'42
\f0 \
<!-- begin locale en -->\
The internal file reference will not be changed unlike ((<item_exits>).\
<!-- end locale -->\
@result \
<!-- begin locale ja -->\
boolean : 
\f1 \'91\'b6\'8d\'dd\'82\'b7\'82\'e9\'82\'cc\'82\'c5\'82\'a0\'82\'ea\'82\'ce
\f0  true\
<!-- begin locale en -->\
boolean : true if the item exists.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 item_exists_without_update\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 item_exists_without_update\cf3 ()\

\b end
\b0  \cf6 item_exists_without_update\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\
((<item_exists>)) 
\f1 \'82\'c6\'93\'af\'82\'b6\'82\'c5\'82\'b7\'81\'42\'8e\'51\'8f\'c6\'82\'b5\'82\'c4\'82\'a2\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'aa\'91\'b6\'8d\'dd\'82\'b7\'82\'e9\'82\'a9\'82\'c7\'82\'a4\'82\'a9\'92\'b2\'82\'d7\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Synonym of ((<item_exists>)). Check whether the item referenced by the instance exists or not.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
boolean : 
\f1 \'91\'b6\'8d\'dd\'82\'b7\'82\'e9\'82\'cc\'82\'c5\'82\'a0\'82\'ea\'82\'ce
\f0  true\
<!-- begin locale en -->\
boolean : true if the item exists.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  
\b \cf5 exists
\b0 \cf3 \
	
\b return
\b0  \cf6 item_exists\cf3 ()\

\b end
\b0  
\b \cf5 exists
\b0 \cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'96\'bc\'82\'f0\'95\'cf\'8d\'58\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Rename an item which referenced by the XFile instance.\
<!-- end locale -->\
@result boolean : \
<!-- begin locale ja -->
\f1 \'90\'ac\'8c\'f7\'82\'b7\'82\'ea\'82\'ce
\f0  true\
<!-- begin locale en -->boolean : true if success.<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 rename_to\cf3 (\cf6 new_name\cf3 )\
	
\b if
\b0  
\b not
\b0  (\cf6 item_exists\cf3 ()) 
\b then
\b0 \
		
\b return
\b0  \cf8 false\cf3 \
	
\b end
\b0  
\b if
\b0 \
	\
	
\b tell
\b0  
\i \cf5 application
\i0 \cf3  "Finder"\
		
\b set
\b0  \cf4 name\cf3  
\b of
\b0  
\b my
\b0  \cf6 item_ref\cf3 () 
\b to
\b0  \cf6 new_name\cf3 \
	
\b end
\b0  
\b tell
\b0 \
	\
	
\b set
\b0  
\b my
\b0  \cf6 _infoRecord\cf3  
\b to
\b0  
\i \cf5 missing value
\i0 \cf3 \
	
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 set_name\cf3 (\cf6 new_name\cf3 )\
	
\b return
\b0  \cf8 true\cf3 \

\b end
\b0  \cf6 rename_to\cf3 \
\
\cf2 (*!@abstruct \
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'8e\'77\'92\'e8\'82\'b5\'82\'bd\'8f\'ea\'8f\'8a\'82\'c9\'83\'52\'83\'73\'81\'5b\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Copy the item to specified location\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\

\f1 \'93\'af\'96\'bc\'82\'cc\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'aa\'82\'a0\'82\'ea\'82\'ce\'8f\'e3\'8f\'91\'82\'ab\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Same name item in the destination is replaced.\
<!-- end locale -->\
@param a_destination (script object or text) : \
<!-- begin locale ja -->
\f1 \'83\'52\'83\'73\'81\'5b\'90\'e6\'82\'f0\'8e\'51\'8f\'c6\'82\'b5\'82\'c4\'82\'a2\'82\'e9
\f0  XFile 
\f1 \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'81\'42\'82\'e0\'82\'b5\'82\'ad\'82\'cd\'81\'41\'83\'5e\'81\'5b\'83\'51\'83\'62\'83\'67\'82\'a9\'82\'e7\'82\'cc\'91\'8a\'91\'ce\'83\'70\'83\'58\'81\'42
\f0 \
<!-- begin locale en -->a XFile instance referencing the copy destination or a relative path.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
script object : 
\f1 \'83\'52\'83\'73\'81\'5b\'82\'b5\'82\'bd\'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cc
\f0  XFile 
\f1 \'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58
\f0 \
<!-- begin locale en -->\
script object : a XFile instance referencing copied item.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 copy_to\cf3 (\cf6 a_destination\cf3 )\
	
\b return
\b0  \cf6 copy_with_opts\cf3 (\cf6 a_destination\cf3 , 
\i \cf5 missing value
\i0 \cf3 )\

\b end
\b0  \cf6 copy_to\cf3 \
\
\cf2 (*!\
@abstruct \
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'8e\'77\'92\'e8\'82\'b5\'82\'bd\'8f\'ea\'8f\'8a\'82\'c9\'83\'52\'83\'73\'81\'5b\'82\'b5\'82\'dc\'82\'b7\'81\'42\'82\'a2\'82\'ad\'82\'c2\'82\'a9\'82\'cc\'83\'49\'83\'76\'83\'56\'83\'87\'83\'93\'82\'f0\'8e\'77\'92\'e8\'82\'c5\'82\'ab\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Copy the item to specified location with options.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\

\f1 \'91\'e6\'82\'51\'88\'f8\'90\'94\'82\'c5\'83\'49\'83\'76\'83\'56\'83\'87\'83\'93\'81\'69
\f0  record 
\f1 \'83\'4e\'83\'89\'83\'58\'82\'cc\'92\'6c\'81\'6a\'82\'f0\'97\'5e\'82\'a6\'82\'e9\'82\'b1\'82\'c6\'82\'c9\'82\'e6\'82\'e8\'81\'41\'83\'52\'83\'73\'81\'5b\'91\'80\'8d\'ec\'82\'cc\'83\'4a\'83\'58\'83\'5e\'83\'7d\'83\'43\'83\'59\'82\'aa\'8d\'73\'82\'a6\'82\'dc\'82\'b7\'81\'42
\f0 \

\f1 \'83\'49\'83\'76\'83\'56\'83\'87\'83\'93\'82\'c6\'82\'b5\'82\'c4\'82\'a0\'82\'bd\'82\'a6\'82\'e9\'83\'8c\'83\'52\'81\'5b\'83\'68\'82\'cd\'81\'41
\f0 \{with_replaceing : boolean, with_admin:boolean, with_replacing: boolean\} 
\f1 \'82\'c6\'82\'a2\'82\'a4\'83\'74\'83\'48\'81\'5b\'83\'7d\'83\'62\'83\'67\'82\'c5\'82\'b7\'81\'42\'92\'6c\'82\'f0\'8e\'77\'92\'e8\'82\'b5\'82\'c8\'82\'a2\'83\'89\'83\'78\'83\'8b\'82\'cd\'8f\'c8\'97\'aa\'89\'c2\'94\'5c\'82\'c5\'82\'b7\'81\'42
\f0 \
* with_replacing : 
\f1 \'83\'52\'83\'73\'81\'5b\'90\'e6\'82\'c9\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'aa\'82\'a0\'82\'c1\'82\'bd\'8f\'ea\'8d\'87\'92\'75\'82\'ab\'8a\'b7\'82\'a6\'82\'e9\'82\'a9\'82\'c7\'82\'a4\'82\'a9\'81\'42\'83\'66\'83\'74\'83\'48\'83\'8b\'83\'67\'82\'cd
\f0  true
\f1 \'81\'42
\f0 \
* with_admin : 
\f1 \'8a\'c7\'97\'9d\'8e\'d2\'8c\'a0\'8c\'c0\'82\'c5\'83\'52\'83\'73\'81\'5b\'82\'b5\'82\'dc\'82\'b7\'81\'42\'83\'66\'83\'74\'83\'48\'83\'8b\'83\'67\'82\'cd
\f0  false
\f1 \'81\'42
\f0 \
* with_removing : 
\f1 \'83\'52\'83\'73\'81\'5b\'90\'e6\'82\'aa\'91\'b6\'8d\'dd\'82\'b7\'82\'e9\'8f\'ea\'8d\'87\'81\'41\'83\'52\'83\'73\'81\'5b\'90\'e6\'82\'f0\'8d\'ed\'8f\'9c\'82\'b5\'82\'c4\'82\'a9\'82\'e7\'83\'52\'83\'73\'81\'5b\'82\'f0\'8e\'c0\'8d\'73\'82\'b5\'82\'dc\'82\'b7\'81\'42\'83\'66\'83\'74\'83\'48\'83\'8b\'83\'67\'82\'cd
\f0  false
\f1 \'81\'42
\f0 \
<!-- begin locale en -->\
By passing options (a value of a record) as a second parameter, you can change the behavior of copying. The format of the option record is \{with_replaceing : boolean, with_admin:boolean, with_replacing: boolean\}. You can ommit labels you don't required.\
* with_replacing : Copying with replacing the destination. The default is true.\
* with_admin : Copying with administrator privileges. The default is false.\
* with_removing : Copying after removing the destination. The default is false.\
<!-- end locale -->\
@param a_destination (script object) : \
<!-- begin locale ja -->
\f1 \'83\'52\'83\'73\'81\'5b\'90\'e6\'82\'f0\'8e\'51\'8f\'c6\'82\'b5\'82\'c4\'82\'a2\'82\'e9
\f0  XFile 
\f1 \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'e0\'82\'b5\'82\'ad\'82\'cd\'91\'8a\'91\'ce\'83\'70\'83\'58\'81\'42
\f0 \
<!-- begin locale en -->a XFile instance referencing the copy destination or a relative path.\
<!-- end locale -->\
@param opts ( record): \
<!-- begin locale ja -->
\f1 \'83\'52\'83\'73\'81\'5b\'90\'e6\'82\'c9
\f0 \
<!-- begin locale en -->a XFile instance referencing the copy destination\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
script object : 
\f1 \'83\'52\'83\'73\'81\'5b\'82\'b5\'82\'bd\'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cc
\f0  XFile 
\f1 \'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58
\f0 \
<!-- begin locale en -->\
script object : a XFile instance referencing copied item.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 copy_with_opts\cf3 (\cf6 a_destination\cf3 , \cf6 opts\cf3 )\
	\cf2 -- cp : if source and destination are folders and the path of the source ends with "/", \cf3 \
	\cf2 --         cp command contents of the source copy under the destination folder like ditto.\cf3 \
	\cf2 --        The endding "/" of the source path should be removed for stable result.\cf3 \
	\cf2 --        Is the support  of ditto not required ?\cf3 \
	
\b set
\b0  \cf6 w_replacing\cf3  
\b to
\b0  \cf8 true\cf3 \
	
\b set
\b0  \cf6 w_admin\cf3  
\b to
\b0  \cf8 false\cf3 \
	
\b set
\b0  \cf6 w_removing\cf3  
\b to
\b0  \cf8 false\cf3 \
	
\b set
\b0  \cf6 command\cf3  
\b to
\b0  "cp" \cf2 -- or "ditto"\cf3 \
	\
	
\b if
\b0  
\i \cf5 class
\i0 \cf3  
\b of
\b0  \cf6 opts\cf3  
\b is
\b0  
\i \cf5 record
\i0 \cf3  
\b then
\b0 \
		
\b try
\b0 \
			
\b set
\b0  \cf6 w_replacing\cf3  
\b to
\b0  \cf6 with_replacing\cf3  
\b of
\b0  \cf6 opts\cf3 \
		
\b end
\b0  
\b try
\b0 \
		
\b try
\b0 \
			
\b set
\b0  \cf6 w_admin\cf3  
\b to
\b0  \cf6 with_admin\cf3  
\b of
\b0  \cf6 opts\cf3 \
		
\b end
\b0  
\b try
\b0 \
		
\b try
\b0 \
			
\b set
\b0  \cf6 w_removing\cf3  
\b to
\b0  \cf6 with_removing\cf3  
\b of
\b0  \cf6 opts\cf3 \
		
\b end
\b0  
\b try
\b0 \
		
\b try
\b0 \
			
\b if
\b0  \cf6 ditto\cf3  
\b of
\b0  \cf6 opts\cf3  
\b then
\b0 \
				
\b set
\b0  \cf6 command\cf3  
\b to
\b0  "ditto"\
			
\b end
\b0  
\b if
\b0 \
		
\b end
\b0  
\b try
\b0 \
	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  
\i \cf5 class
\i0 \cf3  
\b of
\b0  \cf6 a_destination\cf3  
\b is
\b0  
\b in
\b0  \{
\i \cf5 text
\i0 \cf3 , 
\i \cf5 Unicode text
\i0 \cf3 , 
\i \cf5 string
\i0 \cf3 \} 
\b then
\b0 \
		
\b set
\b0  \cf6 a_destination\cf3  
\b to
\b0  \cf6 parent_folder\cf3 ()'s \cf6 child\cf3 (\cf6 a_destination\cf3 )\
	
\b end
\b0  
\b if
\b0 \
	\
	\
	
\b if
\b0  \cf6 command\cf3  
\b is
\b0  "cp" 
\b then
\b0 \
		
\b set
\b0  \cf6 com_opts\cf3  
\b to
\b0  "-Rp"\
		
\b if
\b0  \cf6 w_replacing\cf3  
\b then
\b0 \
			
\b set
\b0  \cf6 com_opts\cf3  
\b to
\b0  \cf6 com_opts\cf3  & "f"\
		
\b end
\b0  
\b if
\b0 \
	
\b else
\b0  
\b if
\b0  \cf6 command\cf3  
\b is
\b0  "ditto" 
\b then
\b0 \
		
\b set
\b0  \cf6 com_opts\cf3  
\b to
\b0  "--rsrc"\
	
\b end
\b0  
\b if
\b0 \
	\
	
\b set
\b0  \cf6 is_folder_to\cf3  
\b to
\b0  \cf8 false\cf3 \
	
\b if
\b0  \cf6 a_destination\cf3 's \cf6 item_exists\cf3 () 
\b then
\b0 \
		
\b if
\b0  (\cf6 w_removing\cf3 ) 
\b then
\b0 \
			\cf6 a_destination\cf3 's \cf6 remove\cf3 ()\
		
\b else
\b0 \
			
\b if
\b0  \cf6 command\cf3  
\b is
\b0  "cp" 
\b then
\b0 \
				
\b set
\b0  \cf6 is_folder_to\cf3  
\b to
\b0  \cf6 a_destination\cf3 's \cf6 is_folder\cf3 ()\
			
\b end
\b0  
\b if
\b0 \
		
\b end
\b0  
\b if
\b0 \
	
\b end
\b0  
\b if
\b0 \
	
\b set
\b0  \cf6 destination_path\cf3  
\b to
\b0  \cf4 quoted form\cf3  
\b of
\b0  \cf6 a_destination\cf3 's \cf6 normalized_posix_path\cf3 ()\
	
\b set
\b0  \cf6 source_path\cf3  
\b to
\b0  \cf4 quoted form\cf3  
\b of
\b0  \cf6 normalized_posix_path\cf3 ()\
	
\b set
\b0  \cf6 a_command\cf3  
\b to
\b0  \cf6 command\cf3  & \cf4 space\cf3  & \cf6 com_opts\cf3  & \cf4 space\cf3  & \cf6 source_path\cf3  & \cf4 space\cf3  & \cf6 destination_path\cf3 \
	
\b \cf7 do shell script
\b0 \cf3  \cf6 a_command\cf3  \cf7 administrator privileges\cf3  \cf6 w_admin\cf3 \
	
\b if
\b0  \cf6 is_folder_to\cf3  
\b then
\b0 \
		
\b return
\b0  \cf6 a_destination\cf3 's \cf6 child\cf3 (\cf6 item_name\cf3 ())\
	
\b end
\b0  
\b if
\b0 \
	
\b return
\b0  \cf6 a_destination\cf3 \

\b end
\b0  \cf6 copy_with_opts\cf3 \
\

\b on
\b0  \cf6 finder_copy_to\cf3 (\cf6 a_destination\cf3 , \cf6 with_replacing\cf3 )\
	
\b set
\b0  \cf6 destination\cf3  
\b to
\b0  \cf6 a_destination\cf3 's \cf6 as_alias\cf3 ()\
	
\b set
\b0  \cf6 source_alias\cf3  
\b to
\b0  \cf6 as_alias\cf3 ()\
	
\b tell
\b0  
\i \cf5 application
\i0 \cf3  "Finder"\
		
\b set
\b0  \cf6 new_item\cf3  
\b to
\b0  (
\b \cf5 duplicate
\b0 \cf3  \cf6 source_alias\cf3  \cf5 to\cf3  \cf6 destination\cf3  \cf5 replacing\cf3  \cf6 with_replacing\cf3 ) 
\b as
\b0  
\i \cf5 alias
\i0 \cf3 \
	
\b end
\b0  
\b tell
\b0 \
	
\b return
\b0  \cf6 make_with\cf3 (\cf6 new_item\cf3 )\

\b end
\b0  \cf6 finder_copy_to\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'8e\'77\'92\'e8\'82\'b5\'82\'bd\'8f\'ea\'8f\'8a\'82\'c9\'88\'da\'93\'ae\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Move the item referenced by the instance to specified location.\
<!-- end locale -->\
@param a_destination (script object) : \
<!-- begin locale ja -->
\f1 \'88\'da\'93\'ae\'90\'e6\'82\'f0\'8e\'51\'8f\'c6\'82\'b5\'82\'c4\'82\'a2\'82\'e9
\f0  XFile 
\f1 \'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58
\f0 \
<!-- begin locale en -->a XFile instance referencing the destination to move.\
<!-- end locale -->\
@result boolean : \
<!-- begin locale ja -->
\f1 \'90\'ac\'8c\'f7\'82\'b7\'82\'ea\'82\'ce
\f0  true\
<!-- begin locale en -->boolean : true if success.<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 move_to\cf3 (\cf6 a_destination\cf3 )\
	\cf2 (*\
	set source to as_alias()\
	set destination_alias to a_destination's as_alias()\
	tell application "Finder"\
		move source to destination_alias\
	end tell\
	*)\cf3 \
	
\b if
\b0  
\b not
\b0  \cf6 item_exists_without_update\cf3 () 
\b then
\b0 \
		
\b return
\b0  \cf8 false\cf3 \
	
\b end
\b0  
\b if
\b0 \
	\
	
\b set
\b0  \cf6 is_folder_to\cf3  
\b to
\b0  \cf8 false\cf3 \
	
\b if
\b0  \cf6 a_destination\cf3 's \cf6 item_exists_without_update\cf3 () 
\b then
\b0 \
		
\b set
\b0  \cf6 is_folder_to\cf3  
\b to
\b0  \cf6 a_destination\cf3 's \cf6 is_folder\cf3 ()\
	
\b end
\b0  
\b if
\b0 \
	\
	
\b set
\b0  \cf6 destination_path\cf3  
\b to
\b0  \cf4 quoted form\cf3  
\b of
\b0  \cf6 a_destination\cf3 's \cf6 posix_path\cf3 ()\
	
\b set
\b0  \cf6 source_path\cf3  
\b to
\b0  \cf4 quoted form\cf3  
\b of
\b0  \cf6 posix_path\cf3 ()\
	
\b \cf7 do shell script
\b0 \cf3  "mv -f " & \cf6 source_path\cf3  & \cf4 space\cf3  & \cf6 destination_path\cf3 \
	\
	
\b return
\b0  \cf8 true\cf3 \

\b end
\b0  \cf6 move_to\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'47\'83\'43\'83\'8a\'83\'41\'83\'58\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'83\'49\'83\'8a\'83\'57\'83\'69\'83\'8b\'82\'f0\'8b\'81\'82\'df\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Resolving original item of a alias file.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\

\f1 \'83\'47\'83\'43\'83\'8a\'83\'41\'83\'58\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'c5\'82\'c8\'82\'af\'82\'ea\'82\'ce\'8e\'a9\'95\'aa\'8e\'a9\'90\'67\'82\'f0\'95\'d4\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \

\f1 \'83\'49\'83\'8a\'83\'57\'83\'69\'83\'8b\'82\'aa\'8c\'a9\'82\'c2\'82\'a9\'82\'e7\'82\'c8\'82\'af\'82\'ea\'82\'ce
\f0  missing value 
\f1 \'82\'f0\'95\'d4\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
If the item referenced by the XFile instance is not an alias file, same instance is returned.\
 If the original item is not found, missing value is returned.\
<!-- end locale -->\
@result script object or missing value\
*)\cf3 \

\b on
\b0  \cf6 resolve_alias\cf3 ()\
	
\b set
\b0  \cf6 info_rec\cf3  
\b to
\b0  \cf6 info\cf3 ()\
	
\b if
\b0  
\i \cf5 alias
\i0 \cf3  
\b of
\b0  \cf6 info_rec\cf3  
\b then
\b0 \
		
\b try
\b0 \
			
\b tell
\b0  
\i \cf5 application
\i0 \cf3  "Finder"\
				
\b set
\b0  \cf6 original_item\cf3  
\b to
\b0  (\cf4 original item\cf3  
\b of
\b0  (
\b my
\b0  \cf6 as_alias\cf3 ())) 
\b as
\b0  
\i \cf5 alias
\i0 \cf3 \
			
\b end
\b0  
\b tell
\b0 \
		
\b on
\b0  
\b error
\b0  \cf6 errmsg\cf3 \
			
\b return
\b0  
\i \cf5 missing value
\i0 \cf3 \
		
\b end
\b0  
\b try
\b0 \
		
\b return
\b0  \cf6 make_with\cf3 (\cf6 original_item\cf3 )\
	
\b else
\b0 \
		
\b return
\b0  
\b a reference
\b0  
\b to
\b0  
\b me
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf6 resolve_alias\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'53\'83\'7e\'94\'a0\'82\'c9\'93\'fc\'82\'ea\'82\'dc\'82\'b7
\f0 \
<!-- begin locale en -->\
Put into trash.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 into_trash\cf3 ()\
	
\b set
\b0  \cf6 a_file\cf3  
\b to
\b0  \cf6 as_alias\cf3 ()\
	
\b tell
\b0  
\i \cf5 application
\i0 \cf3  "Finder"\
		
\b \cf5 delete
\b0 \cf3  \cf6 a_file\cf3 \
	
\b end
\b0  
\b tell
\b0 \
	\cf6 update_pathinfo\cf3 ()\

\b end
\b0  \cf6 into_trash\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'8d\'ed\'8f\'9c\'82\'b5\'82\'dc\'82\'b7
\f0 \
<!-- begin locale en -->\
Remove the item\
<!-- end locale -->\
@result script object : me\
*)\cf3 \

\b on
\b0  \cf6 remove\cf3 ()\
	
\b set
\b0  \cf6 a_file\cf3  
\b to
\b0  \cf4 quoted form\cf3  
\b of
\b0  \cf6 posix_path\cf3 ()\
	
\b set
\b0  \cf6 a_path\cf3  
\b to
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 as_text\cf3 ()\
	
\b \cf7 do shell script
\b0 \cf3  "rm -r " & \cf6 a_file\cf3 \
	
\b set
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 _item_ref\cf3  
\b to
\b0  \cf6 a_path\cf3 \
	
\b set
\b0  
\b my
\b0  \cf6 _infoRecord\cf3  
\b to
\b0  
\i \cf5 missing value
\i0 \cf3 \
	
\b return
\b0  
\b me
\b0 \

\b end
\b0  \cf6 remove\cf3 \
\
\cf2 (*!@group Making subfolders *)\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'54\'83\'75\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'8d\'ec\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Make a sub folder\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\

\f1 \'82\'b7\'82\'c5\'82\'c9\'93\'af\'96\'bc\'82\'cc\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'aa\'82\'a0\'82\'e9\'82\'c8\'82\'c7\'82\'cc\'97\'9d\'97\'52\'82\'c5\'81\'41\'8e\'b8\'94\'73\'82\'b5\'82\'bd\'82\'e7
\f0  missing value\
<!-- begin locale en -->\
missing value is returned, if failing to make a new folder\
<!-- end locale -->\
@param folder_name (Unicode text) : \
<!-- begin locale ja -->
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'96\'bc
\f0 \
<!-- begin locale en -->a name of new folder.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
script object or missing value : 
\f1 \'90\'56\'82\'b5\'82\'ad\'8d\'ec\'82\'c1\'82\'bd\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cc
\f0  XFile 
\f1 \'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'81\'42
\f0 \
<!-- begin locale en -->\
script object or missing value : a XFile instance of newly created folder.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 make_folder\cf3 (\cf6 folder_name\cf3 )\
	
\b if
\b0  
\b not
\b0  (\cf6 item_exists\cf3 ()) 
\b then
\b0 \
		
\b \cf5 log
\b0 \cf3  (
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 as_text\cf3 () & " does not exists.")\
		
\b return
\b0  
\i \cf5 missing value
\i0 \cf3 \
	
\b end
\b0  
\b if
\b0 \
	\
	
\b set
\b0  \cf6 new_folder\cf3  
\b to
\b0  \cf6 child\cf3 (\cf6 folder_name\cf3 )\
	
\b return
\b0  \cf6 new_folder\cf3 's \cf6 make_path\cf3 (\{\})\

\b end
\b0  \cf6 make_folder\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'90\'dd\'92\'e8\'82\'b3\'82\'ea\'82\'c4\'82\'a2\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b\'83\'70\'83\'58\'82\'cc\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'8d\'ec\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0  \
<!-- begin locale en -->\
Make folders which indicating the path of the XFile instance.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\
mkdir -p 
\f1 \'82\'f0\'8e\'67\'82\'c1\'82\'c4\'82\'c2\'82\'ad\'82\'e8\'82\'dc\'82\'b7\'81\'42\'8e\'b8\'94\'73\'82\'b5\'82\'bd\'82\'e7
\f0  missing value
\f1 \'82\'aa\'95\'d4\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \

\f1 \'88\'f8\'90\'94\'82\'c9\'83\'49\'83\'76\'83\'56\'83\'87\'83\'93\'82\'c6\'82\'b5\'82\'c4\'83\'8c\'83\'52\'81\'5b\'83\'68\'82\'f0\'82\'a0\'82\'bd\'82\'a6\'93\'ae\'8d\'ec\'82\'f0\'83\'4a\'83\'58\'83\'5e\'83\'7d\'83\'43\'83\'59\'82\'c5\'82\'ab\'82\'dc\'82\'b7\'81\'42
\f0 \
\
\{with_admin : boolean\}\
\

\f1 \'8d\'a1\'82\'cc\'82\'c6\'82\'b1\'82\'eb\'81\'41
\f0 with_admin 
\f1 \'82\'be\'82\'af\'82\'c5\'82\'b7\'81\'42
\f0 true 
\f1 \'82\'f0\'81\'41\'97\'5e\'82\'a6\'82\'e9\'82\'c6\'8a\'c7\'97\'9d\'8e\'d2\'8c\'a0\'8c\'c0\'82\'c5\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'8d\'ec\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \

\f1 \'83\'49\'83\'76\'83\'56\'83\'87\'83\'93\'82\'f0\'8e\'77\'92\'e8\'82\'b5\'82\'c8\'82\'a2\'8f\'ea\'8d\'87\'82\'cd\'81\'41\'8b\'f3\'82\'cc\'83\'8a\'83\'58\'83\'67
\f0  \{\} 
\f1 \'82\'f0\'97\'5e\'82\'a6\'82\'c4\'82\'ad\'82\'be\'82\'b3\'82\'a2\'81\'42
\f0 \
<!-- begin locale en -->\
Using a shell command "mkdir -p".\
By passing a record of the following format, you can make folders with administrator privileges.\
\
\{with_admin : boolean\}\
\
If you don't need to specify options, pass an empty list \{\}.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
script object or missing value : 
\f1 \'90\'56\'82\'b5\'82\'ad\'8d\'ec\'82\'c1\'82\'bd\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cc
\f0  XFile 
\f1 \'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'81\'42
\f0 \
<!-- begin locale en -->\
script object or missing value : a XFile instance of newly created folder.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 make_path\cf3 (\cf6 opts\cf3 )\
	
\b set
\b0  \cf6 w_admin\cf3  
\b to
\b0  \cf8 false\cf3 \
	
\b if
\b0  
\i \cf5 class
\i0 \cf3  
\b of
\b0  \cf6 opts\cf3  
\b is
\b0  
\i \cf5 record
\i0 \cf3  
\b then
\b0 \
		
\b set
\b0  \cf6 w_admin\cf3  
\b to
\b0  \cf6 with_admin\cf3  
\b of
\b0  \cf6 opts\cf3 \
	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf6 item_exists\cf3 () 
\b then
\b0 \
		
\b if
\b0  \cf6 is_folder\cf3 () 
\b then
\b0 \
			
\b return
\b0  
\b me
\b0 \
		
\b else
\b0 \
			
\i \cf5 missing value
\i0 \cf3 \
		
\b end
\b0  
\b if
\b0 \
	
\b end
\b0  
\b if
\b0 \
	
\b \cf7 do shell script
\b0 \cf3  "mkdir -p " & (\cf4 quoted form\cf3  
\b of
\b0  \cf6 posix_path\cf3 ()) \cf7 administrator privileges\cf3  \cf6 w_admin\cf3 \
	
\b if
\b0  \cf6 item_exists\cf3 () 
\b then
\b0  
\b return
\b0  
\b me
\b0 \
	
\b return
\b0  
\i \cf5 missing value
\i0 \cf3 \

\b end
\b0  \cf6 make_path\cf3 \
\
\
\cf2 (*!@group Reading and Writing File Contents *)\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'82\'cc\'93\'e0\'97\'65\'82\'f0
\f0  UTF-8 
\f1 \'83\'65\'83\'4c\'83\'58\'83\'67\'82\'c6\'82\'b5\'82\'c4\'93\'c7\'82\'dd\'8d\'9e\'82\'dd\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Read file contents as UTF-8 encoded text.\
<!-- end locale -->\
@result Unicode text (UTF-8)\
*)\cf3 \

\b on
\b0  \cf6 read_as_utf8\cf3 ()\
	\cf6 check_existance_raising_error\cf3 ()\
	
\b return
\b0  
\b \cf7 read
\b0 \cf3  (\cf6 as_alias\cf3 ()) \cf7 as\cf3  \'ab
\i \cf5 class
\i0 \cf3  utf8\'bb\

\b end
\b0  \cf6 read_as_utf8\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'82\'c9
\f0  UTF-8 
\f1 \'83\'65\'83\'4c\'83\'58\'83\'67\'82\'f0\'8f\'91\'82\'ab\'8d\'9e\'82\'dd\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Write data into the file as UTF-8 encoded text.\
<!-- end locale -->\
@param a_data (Unicode text or string) :\
<!-- begin locale ja -->
\f1 \'83\'74\'83\'40\'83\'43\'83\'8b\'82\'c9\'8f\'91\'82\'ab\'8d\'9e\'82\'de\'83\'66\'81\'5b\'83\'5e
\f0 \
<!-- begin locale en -->data to write into the file.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 write_as_utf8\cf3 (\cf6 a_data\cf3 )\
	
\b set
\b0  \cf6 output\cf3  
\b to
\b0  
\b \cf7 open for access
\b0 \cf3  \cf6 as_furl\cf3 () 
\b with
\b0  \cf7 write permission\cf3 \
	
\b \cf7 set eof
\b0 \cf3  \cf6 output\cf3  \cf7 to\cf3  0\
	
\b \cf7 write
\b0 \cf3  \cf6 a_data\cf3  \cf7 to\cf3  \cf6 output\cf3  \cf7 as\cf3  \'ab
\i \cf5 class
\i0 \cf3  utf8\'bb\
	
\b \cf7 close access
\b0 \cf3  \cf6 output\cf3 \

\b end
\b0  \cf6 write_as_utf8\cf3 \
\
\cf2 (*!@group Parent and Children *)\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\
XFile 
\f1 \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'aa\'8e\'51\'8f\'c6\'82\'b5\'82\'c4\'82\'a2\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'8a\'dc\'82\'de\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain a folder containing the item referenced by the XFile instance.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
script object : 
\f1 \'90\'65\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cc
\f0  XFile 
\f1 \'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58
\f0 \
<!-- begin locale en -->\
script object : a XFile instance of the parent folder.\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 parent_folder\cf3 ()\
	
\b return
\b0  \cf6 make_with_pathinfo\cf3 (
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 parent_folder\cf3 ())\

\b end
\b0  \cf6 parent_folder\cf3 \
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'93\'e0\'82\'cc\'83\'74\'83\'40\'83\'43\'83\'8b
\f0 /
\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'91\'8a\'91\'ce\'83\'70\'83\'58\'82\'f0\'8e\'77\'92\'e8\'82\'b5\'82\'c4\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain an item in the folder with specifying a sub path from the target.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\

\f1 \'91\'b6\'8d\'dd\'82\'b5\'82\'c8\'82\'a2\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'c9\'91\'ce\'82\'b5\'82\'c4\'8e\'c0\'8d\'73\'82\'b7\'82\'e9\'82\'c6
\f0  missing value 
\f1 \'82\'aa\'95\'d4\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
If this methods is sent to non exsisting folder, missing value is returend.\
<!-- end locale -->\
@param suppath(Unicode text) :\
<!-- begin locale ja -->
\f1 \'8e\'e6\'93\'be\'82\'b7\'82\'e9\'8d\'80\'96\'da\'82\'cc\'83\'54\'83\'75\'83\'70\'83\'58
\f0 \
<!-- begin locale en -->sub path to obtain.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
script object or missing value : XFile 
\f1 \'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58
\f0 \
<!-- begin locale en -->\
script object or missing value : a XFile instance\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 child\cf3 (\cf6 subpath\cf3 )\
	
\b if
\b0  \cf6 item_exists\cf3 () 
\b then
\b0 \
		
\b return
\b0  \cf6 make_with_pathinfo\cf3 (
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 child\cf3 (\cf6 subpath\cf3 ))\
	
\b else
\b0 \
		
\b return
\b0  
\i \cf5 missing value
\i0 \cf3 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf6 child\cf3 \
\

\b on
\b0  \cf6 child_posix\cf3 (\cf6 subpath\cf3 )\
	
\b if
\b0  \cf6 item_exists\cf3 () 
\b then
\b0 \
		
\b set
\b0  \cf6 a_path\cf3  
\b to
\b0  \cf6 posix_path\cf3 ()\
		
\b set
\b0  \cf6 a_path\cf3  
\b to
\b0  \cf6 a_path\cf3  & \cf6 subpath\cf3 \
		
\b return
\b0  \cf6 make_with\cf3 (\cf6 a_path\cf3 )\
	
\b else
\b0 \
		
\b return
\b0  
\i \cf5 missing value
\i0 \cf3 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf6 child_posix\cf3 \
\
\
\cf2 (*!@abstruct\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'93\'e0\'82\'c5\'91\'bc\'82\'c6\'96\'bc\'91\'4f\'82\'aa\'8f\'64\'95\'a1\'82\'b5\'82\'c8\'82\'a2
\f0  XFile 
\f1 \'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'f0\'90\'b6\'90\'ac\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
Obtain a XFile instance reference unique name item in the folder.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\

\f1 \'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'c5\'82\'c8\'82\'a2
\f0  XFile 
\f1 \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'c9\'91\'ce\'82\'b5\'82\'c4\'8e\'c0\'8d\'73\'82\'b7\'82\'e9\'82\'c6\'81\'41
\f0 missing value 
\f1 \'82\'aa\'95\'d4\'82\'e8\'82\'dc\'82\'b7\'81\'42
\f0 \
XFile 
\f1 \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'aa\'83\'74\'83\'40\'83\'43\'83\'8b\'8e\'51\'8f\'c6\'82\'aa\'91\'b6\'8d\'dd\'82\'b5\'82\'c8\'82\'af\'82\'ea\'82\'ce\'81\'41
\f0 error number 1350 
\f1 \'82\'aa\'94\'ad\'90\'b6\'82\'b5\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
If the instance's file reference is not a folder, missing value will be returned.\
If this methods is sent to non existing item, error number 1350 will be raised.\
<!-- end locale -->\
@param a_candidate(Unicode text or list) :\
<!-- begin locale ja -->\

\f1 \'8e\'e6\'93\'be\'82\'b5\'82\'bd\'82\'a2\'83\'74\'83\'40\'83\'43\'83\'8b\'8e\'51\'8f\'c6\'82\'cc\'96\'bc\'91\'4f\'82\'cc\'8c\'f3\'95\'e2\'81\'42\'8a\'f9\'82\'c9\'91\'b6\'8d\'dd\'82\'b7\'82\'e9\'96\'bc\'91\'4f\'82\'c5\'82\'a0\'82\'ea\'82\'ce\'95\'cf\'8d\'58\'82\'aa\'89\'c1\'82\'a6\'82\'e7\'82\'ea\'82\'dc\'82\'b7\'81\'42
\f0 \
<!-- begin locale en -->\
A candidate of a name to obtain unique item. If same name item exists, the candidate is modified.\
<!-- end locale -->\
@result\
<!-- begin locale ja -->\
script object : XFile 
\f1 \'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58
\f0 \
<!-- begin locale en -->\
script object : a XFile instance\
<!-- end locale -->\
*)\cf3 \

\b on
\b0  \cf6 unique_child\cf3 (\cf6 a_candidate\cf3 )\
	
\b if
\b0  
\b not
\b0  \cf6 is_folder\cf3 () 
\b then
\b0 \
		
\b return
\b0  
\i \cf5 missing value
\i0 \cf3 \
	
\b end
\b0  
\b if
\b0 \
	
\b set
\b0  \{\cf6 a_basename\cf3 , \cf6 a_suffix\cf3 \} 
\b to
\b0  \cf6 PathInfo\cf3 's \cf6 split_name\cf3 (\cf6 a_candidate\cf3 )\
	
\b if
\b0  \cf6 a_suffix\cf3  
\b is
\b0  
\i \cf5 missing value
\i0 \cf3  
\b then
\b0 \
		
\b set
\b0  \cf6 a_suffix\cf3  
\b to
\b0  ""\
	
\b else
\b0 \
		
\b set
\b0  \cf6 a_suffix\cf3  
\b to
\b0  "." & \cf6 a_suffix\cf3 \
	
\b end
\b0  
\b if
\b0 \
	
\b set
\b0  \cf6 i\cf3  
\b to
\b0  2\
	
\b set
\b0  \cf6 escape_suffix\cf3  
\b to
\b0  ""\
	
\b repeat
\b0 \
		
\b set
\b0  \cf6 a_child\cf3  
\b to
\b0  \cf6 child\cf3 (\cf6 a_basename\cf3  & \cf6 escape_suffix\cf3  & \cf6 a_suffix\cf3 )\
		
\b if
\b0  \cf6 a_child\cf3 's \cf6 item_exists\cf3 () 
\b then
\b0 \
			
\b set
\b0  \cf6 escape_suffix\cf3  
\b to
\b0  \cf4 space\cf3  & (\cf6 i\cf3  
\b as
\b0  
\i \cf5 Unicode text
\i0 \cf3 )\
			
\b set
\b0  \cf6 i\cf3  
\b to
\b0  \cf6 i\cf3  + 1\
		
\b else
\b0 \
			
\b exit
\b0  
\b repeat
\b0 \
		
\b end
\b0  
\b if
\b0 \
	
\b end
\b0  
\b repeat
\b0 \
	
\b return
\b0  \cf6 a_child\cf3 \

\b end
\b0  \cf6 unique_child\cf3 \
\

\b on
\b0  \cf6 list_children\cf3 ()\
	
\b return
\b0  
\b \cf7 list folder
\b0 \cf3  
\b of
\b0  \cf6 as_furl\cf3 ()\

\b end
\b0  \cf6 list_children\cf3 \
\

\b on
\b0  \cf6 each\cf3 (\cf6 a_script\cf3 )\
	
\b set
\b0  \cf6 a_list\cf3  
\b to
\b0  \cf6 list_children\cf3 ()\
	
\b script
\b0  \cf6 ListWrapper\cf3 \
		
\b property
\b0  \cf4 contents\cf3  : \cf6 a_list\cf3 \
	
\b end
\b0  
\b script
\b0 \
	\
	
\b repeat
\b0  
\b with
\b0  \cf6 n\cf3  
\b from
\b0  1 
\b to
\b0  
\b \cf5 count
\b0 \cf3  \cf6 a_list\cf3 \
		
\b set
\b0  \cf6 x_item\cf3  
\b to
\b0  \cf6 child\cf3 (
\i \cf5 item
\i0 \cf3  \cf6 n\cf3  
\b of
\b0  \cf4 contents\cf3  
\b of
\b0  \cf6 ListWrapper\cf3 )\
		
\b if
\b0  
\b not
\b0  \cf6 a_script\cf3 's \cf6 do\cf3 (\cf6 x_item\cf3 ) 
\b then
\b0 \
			
\b exit
\b0  
\b repeat
\b0 \
		
\b end
\b0  
\b if
\b0 \
	
\b end
\b0  
\b repeat
\b0 \

\b end
\b0  \cf6 each\cf3 \
\
\cf2 (*== private **)\cf3 \

\b on
\b0  \cf6 item_ref\cf3 ()\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 item_ref\cf3 ()\

\b end
\b0  \cf6 item_ref\cf3 \
\

\b on
\b0  \cf6 check_existance_raising_error\cf3 ()\
	
\b if
\b0  
\b not
\b0  (
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 item_exists_without_update\cf3 ()) 
\b then
\b0 \
		
\b error
\b0  "item " & \cf4 quoted form\cf3  
\b of
\b0  (
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 as_text\cf3 ()) & " does not exist." \cf5 number\cf3  1350\
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf6 check_existance_raising_error\cf3 \
\

\b on
\b0  \cf6 update_pathinfo\cf3 ()\
	
\b set
\b0  
\b my
\b0  \cf6 _pathInfo\cf3  
\b to
\b0  \cf6 PathInfo\cf3 's \cf6 make_with_opts\cf3 (
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 item_ref\cf3 (), \{\cf6 prefering_posix\cf3 :
\b my
\b0  \cf6 _pathInfo\cf3 's \cf6 is_posix\cf3 ()\})\
	
\b return
\b0  
\b my
\b0  \cf6 _pathInfo\cf3 \

\b end
\b0  \cf6 update_pathinfo\cf3 \
\

\b on
\b0  \cf6 debug\cf3 ()\
	
\b \cf7 boot
\b0 \cf3  (
\b \cf7 module loader
\b0 \cf3 ) \cf7 for\cf3  
\b me
\b0 \
	
\b set
\b0  \cf6 a_path\cf3  
\b to
\b0  
\i \cf7 POSIX file
\i0 \cf3  "/Users/tkurita/Desktop/kasokuki.pdf"\
	
\b set
\b0  \cf6 a_xfile\cf3  
\b to
\b0  \cf6 make_with\cf3 (\cf6 a_path\cf3 )\
	\cf2 --return a_result's change_path_extension(missing value)'s posix_path()\cf3 \
	
\b set
\b0  \cf6 new_named_file\cf3  
\b to
\b0  \cf6 a_xfile\cf3 's \cf6 parent_folder\cf3 ()'s \cf6 unique_child\cf3 ("kasokuki-V1-No3-2004-p216.pdf")\
	
\b \cf5 log
\b0 \cf3  \cf6 new_named_file\cf3 's \cf6 item_name\cf3 ()\

\b end
\b0  \cf6 debug\cf3 \
\

\b on
\b0  
\b \cf5 run
\b0 \cf3 \
	\cf2 --return debug()\cf3 \
	
\b try
\b0 \
		
\b \cf7 show helpbook
\b0 \cf3  (
\b \cf7 path to
\b0 \cf3  
\b me
\b0 ) 
\b with
\b0  \cf7 recovering InfoPlist\cf3 \
	
\b on
\b0  
\b error
\b0  \cf6 msg\cf3  \cf5 number\cf3  \cf6 errno\cf3 \
		
\b \cf7 display alert
\b0 \cf3  (\cf6 msg\cf3  & \cf4 return\cf3  & \cf6 errno\cf3 )\
	
\b end
\b0  
\b try
\b0 \

\b end
\b0  
\b \cf5 run
\b0 \cf3 \
}